// Дайте ответ, что будет в результате выполнения данных ниже
// примеров. С объяснением, почему это так.

// 1. "кот" > "код"
// Ответ: true, так как при посимвольном сравнении первые два символа равнозначны, а "т" > "д"

// 2. "2" + 2 * "2"
// Ответ: 24, так как математический оператор * приводит строковые значения к числовым => 2 * "2" = 4, а при использовании оператора сложения +
//строки "2" и числа 4 происходит конкатенация => получим строку "24"

// 3. undefined == null
// Ответ: true, так как это особый случай и нестрогая проверка на равенство null с undefined всегда дает true

// 4. undefined != null
// Ответ: false

// 5. null == 0
// Ответ: false, так как нестрогая проверка на равенство null с чем угодно (кроме undefined) всегда дает false

// 6. 2 > "3"
// Ответ: false, так как строковое значение 3 при помощи оператора сравнения приводится к числу, а число 2 не больше числа 3

// 7. null - false + true
// Ответ: 1, так как при использовании математических операторов значения приводятся к числовым - null приводится к 0, false к 0, true к 1 => 0 - 0 + 1 = 1

// 8. 1 / "l"
// Ответ: NaN, так как строковое значение не может быть приведено к числовому, а любое математическое действие с не числом приводит к результату NaN

// 9. "2" * "3"
// Ответ: 6, так как математический оператор приводит строковые значения к числовым

// 10. 4 + 5 + "O"
// Ответ: "9О", так как число 4 + число 5 = число 9 > число 9 + строка "O" = строка "9O"

// 11. "l" + 4 + 5
// Ответ: "l45", так как строка "l" + число 4 = строка "l4" > строка "l4" + число 5 = строка "l45"

// 12. "4" - 2
// Ответ: 2, так как математический оператор вычитания "-" приводит строковые значения к числовым => 4 - 2 = 2

// 13. "4" - "4x"
// Ответ: NaN, так как математический оператор вычитания "-" приводит строковые значения к числовым, "4" приводится к числу 4, "4x" к NaN => 4 - NaN = NaN

// 14. “23” == 23
// Ответ: true, так как не строгое сравнение сравнивает только значение, без привязки к типу данных => число 23 = строке “23”

// 15. null == false
// Ответ: false, так как нестрогая проверка на равенство null с чем угодно (кроме undefined) всегда дает false

// 16. " -4 "/ 0 + 1
// Ответ: - Infinity, так как строка " -4 " при помощи математического оператора приводится к числу -4, которое делится на 0,
// в результате деления любого числа на 0 получается Infinity (в нашем случае -Infinity, так как делимое число отрицательное),
//а при сложении бесконечности с любым числом получим бесконечность

// 17. null + 1
// Ответ: 1, так как null при помощи математического оператора приводится к числу 0 => 0 + 1 = 1

// 18. undefined + null
// Ответ: NaN, так как undefined при помощи математического оператора приводится к NaN, а null числу 0.
//Любая математическая операция с NaN приводит к NaN => NaN + 0 = NaN

// 19. 1 === “1”
// Ответ: false, так как строгое сравнение сравнивает вначале по типам данных, а число не равно строке

// 20. “2” > 10
// Ответ: false, так как строковое значение 2 при помощи оператора сравнения приводится к числу, а число 2 не больше числа 10

// 21. NaN == undefined
// Ответ: false, так как NaN, как и при строгом равенстве, ни с чем сравнивать нельзя - всегда будет false

// Работа с if-else

// 1. Если переменная a равна нулю, то выведите 'Верно', иначе
// выведите 'Неверно'. Проверьте работу скрипта при a, равном
// 1, 0, -3.

// Решение:
// let a = 1;
// a = 0;
// a = -3;

// if(a === 0) {
//   console.log('Верно');
// } else {
//   console.log('Неверно');
// }

// 2. Если переменная a больше нуля, то выведите 'Верно', иначе
// выведите 'Неверно'. Проверьте работу скрипта при a, равном
// 1, 0, -3.

// Решение:
// let a = 1;
// a = 0;
// a = -3;

// if(a > 0) {
//   console.log('Верно');
// } else {
//   console.log('Неверно');
// }

// 3. Если переменная a меньше нуля, то выведите 'Верно', иначе
// выведите 'Неверно'. Проверьте работу скрипта при a, равном
// 1, 0, -3.

// Решение:
// let a = 1;
// a = 0;
// a = -3;

// if(a < 0) {
//   console.log('Верно');
// } else {
//   console.log('Неверно');
// }

// 4. Если переменная a больше или равна нулю, то выведите
// 'Верно', иначе выведите 'Неверно'. Проверьте работу скрипта
// при a, равном 1, 0, -3.

// Решение:
// let a = 1;
// a = 0;
// a = -3;

// if(a >= 0) {
//   console.log('Верно');
// } else {
//   console.log('Неверно');
// }

// 5. Если переменная a меньше или равна нулю, то выведите
// 'Верно', иначе выведите 'Неверно'. Проверьте работу скрипта
// при a, равном 1, 0, -3.

// Решение:
// let a = 1;
// a = 0;
// a = -3;

// if(a <= 0) {
//   console.log('Верно');
// } else {
//   console.log('Неверно');
// }

// 6. Если переменная a не равна нулю, то выведите 'Верно', иначе
// выведите 'Неверно'. Проверьте работу скрипта при a, равном
// 1, 0, -3.

// Решение:
// let a = 1;
// a = 0;
// a = -3;

// if(a !== 0) {
//   console.log('Верно');
// } else {
//   console.log('Неверно');
// }

// 7. Если переменная a равна 'test', то выведите 'Верно', иначе
// выведите 'Неверно'. Проверьте работу скрипта при a, равном
// 'test', 'тест', 3.

// Решение:
// let a = 'test';
// a = 'тест';
// a = 3;

// if(a === 'test') {
//   console.log('Верно');
// } else {
//   console.log('Неверно');
// }

// 8. Если переменная a равна '1' и по значению и по типу, то
// выведите 'Верно', иначе выведите 'Неверно'. Проверьте работу
// скрипта при a, равном '1', 1, 3.

// Решение:
// let a = '1';
// a = 1;
// a = 3;

// if(a == '1') {
//   console.log('Верно');
// } else {
//   console.log('Неверно');
// }

// Работа с логическими переменными

// 1. Если переменная test равна true, то выведите 'Верно', иначе
// выведите 'Неверно'. Проверьте работу скрипта при test,
// равном true, false. Напишите два варианта скрипта - с короткой
// записью и с длинной.

// Решение:
// let test = true;
// test = false;

//Короткая
// test === true ? console.log('Верно') : console.log('Неверно');

//Длинная
// if(test === true) {
//   console.log('Верно');
// } else {
//   console.log('Неверно');
// }

// 2. Если переменная test не равна true, то выведите 'Верно',
// иначе выведите 'Неверно'. Проверьте работу скрипта при test,
// равном true, false. Напишите два варианта скрипта - с короткой
// записью и с длинной.

// Решение:
// let test = true;
// test = false;

//Короткая
// test !== true ? console.log('Верно') : console.log('Неверно');
// test === true ? console.log('Неверно') : console.log('Верно');
// test === false ? console.log('Верно') : console.log('Неверно');

//Длинная
// if(test !== true) {
//   console.log('Верно');
// } else {
//   console.log('Неверно');
// }

// Работа с && (и) и || (или)

// 1. Если переменная a больше нуля и меньше 5-ти, то выведите
// 'Верно', иначе выведите 'Неверно'. Проверьте работу скрипта
// при a, равном 5, 0, -3, 2.

// Решение:
// let a = 5;
// a = 0;
// a = -3;
// a = 2;

// if(a > 0 && a < 5) {
//   console.log('Верно');
// } else {
//   console.log('Неверно');
// }

// 2. Если переменная a равна нулю или равна двум, то прибавьте
// к ней 7, иначе поделите ее на 10. Выведите новое значение
// переменной на экран. Проверьте работу скрипта при a, равном
// 5, 0, -3, 2.

// Решение:
// let a = 5;
// a = 0;
// a = -3;
// a = 2;

// (a === 0 || a === 2) ? a += 7 : a /= 10;
// console.log(a);

// 3. Если переменная a равна или меньше 1, а переменная b
// больше или равна 3, то выведите сумму этих переменных,
// иначе выведите их разность (результат вычитания). Проверьте
// работу скрипта при a и b, равном 1 и 3, 0 и 6, 3 и 5.

// Решение:
// let result;
// let a = 1;
// let b = 3;
// a = 0;
// b = 6;
// a = 3;
// b = 5;

// (a <= 1 && b >= 3) ? result = a + b : result = a - b;
// console.log(result);

// 4. Если переменная a больше 2-х и меньше 11-ти, или
// переменная b больше или равна 6-ти и меньше 14-ти, то
// выведите 'Верно', в противном случае выведите 'Неверно'.

// Решение:
// let a = 1;
// let b = 3;
// a = 0;
// b = 6;
// a = 3;
// b = 5;

// (a > 2 && a < 11 || b >= 6 && b < 14) ? console.log('Верно') : console.log('Неверно');

// На switch-case

// 1. Переменная num может принимать 4 значения: 1, 2, 3 или 4.
// Если она имеет значение '1', то в переменную result запишем
// 'зима', если имеет значение '2' – 'весна' и так далее. Решите
// задачу через switch-case.

// Решение:
// let result;
// const num = 2;

// switch(num){
//   case(1): 
//      result = 'зима';
//      break;
//   case(2): 
//      result = 'весна';
//      break;
//   case(3): 
//      result = 'лето';
//      break;
//   case(4): 
//      result = 'осень';
//      break;
//   default: 
//      result = 'ошибка'
// }

// console.log(result);

// Общие задачи

// 1. В переменной day лежит какое-то число из интервала от 1 до
// 31. Определите в какую декаду месяца попадает это число (в
// первую, вторую или третью).

// Решение:
// const day = 31;

// if(day <= 10) {
//   console.log('Первая декада');
// } else if(day <= 20){
//   console.log('Вторая декада');
// } else if(day <= 31){
//   console.log('Третья декада');
// }

// 2. В переменной month лежит какое-то число из интервала от 1
// до 12. Определите в какую пору года попадает этот месяц
// (зима, лето, весна, осень).

// Решение:
// const month = 12;

// if(month > 0 && month < 3 || month === 12) {
//   console.log('зима');
// } else if(month < 6) {
//   console.log('весна');
// } else if(month < 9) {
//   console.log('лето');
// } else if (month < 12) {
//   console.log('осень');
// } else {
//   console.log('нет такого месяца');
// }

// Циклы while и for

// Решите эти задачи сначала через цикл while, а затем через цикл
// for.
// 1. Выведите столбец чисел от 1 до 100.

// Решение:
// let i = 1;
// while(i < 101){
//   console.log(i);
//   i++;
// }

// for(let i = 1; i < 101; i++) {
//   console.log(i);
// }

// 2. Выведите столбец чисел от 11 до 33.

// Решение:
// let i = 1;
// while(i < 34){
//   console.log(i);
//   i++;
// }

// for(let i = 11; i < 34; i++) {
//   console.log(i);
// }

// 3. Выведите столбец четных чисел в промежутке от 0 до 100.

// Решение:
// let i = 0;
// while(i < 101){
//   i % 2 === 0 ? console.log(i) : false;
//   i++;
// }

// for(let i = 0; i < 101; i++) {
//   i % 2 === 0 ? console.log(i) : false;
// }

// 4. С помощью цикла найдите сумму чисел от 1 до 100.

// Решение:
// let result = 0;
// let i = 1;
// while(i < 101){
//   result += i;
//   i++;
// }
// console.log(result);

// for(let i = 1; i < 101; i++) {
//   result += i;
// }
// console.log(result);

// Задачи общие.

// 1. Дано число n=1000. Делите его на 2 столько раз, пока
// результат деления не станет меньше 50. Какое число
// получится? Посчитайте количество итераций, необходимых
// для этого (итерация - это проход цикла), и запишите его в
// переменную num.

// let n = 1000;
// let num = 0;

// for(let i = n; i > 50; i /= 2){
//   num++;
// }

// while(n > 50){
//   n = n / 2;
//   num++;
// }

// console.log(num);
